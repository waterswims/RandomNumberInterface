#pragma once

namespace watersoft
{
namespace random
{
    ///////////////////////////////////////////////////////////////////////////
    /// Base class for the random number generators.
    ///////////////////////////////////////////////////////////////////////////
    class RandBase
    {
    public:
        virtual ~RandBase() = default;
        ///////////////////////////////////////////////////////////////////////
        /// \brief Change the current random seed.
        ///
        /// \param seed The new seed.
        ///////////////////////////////////////////////////////////////////////
        virtual void change_seed(int seed) { /* Abstract definition */ }
        ///////////////////////////////////////////////////////////////////////
        /// Return a single random number between 0 and 1.
        ///////////////////////////////////////////////////////////////////////
        virtual double generateUniform() { return 0; }
        ///////////////////////////////////////////////////////////////////////
        /// Return an integer which can be either 0 or 1.
        ///////////////////////////////////////////////////////////////////////
        virtual int generateBool() { return 0; }
        ///////////////////////////////////////////////////////////////////////
        /// Return a random number from a normal distribution.
        ///////////////////////////////////////////////////////////////////////
        virtual double generateNormal() { return 0; }
        ///////////////////////////////////////////////////////////////////////
        /// Return a random number from a lognormal distribution.
        ///////////////////////////////////////////////////////////////////////
        virtual double generateLognormal() { return 0; }
        ///////////////////////////////////////////////////////////////////////
        /// Return a random vector on the surface of a sphere.
        ///////////////////////////////////////////////////////////////////////
        virtual void generateVector(double* a, double* b, double* c)
        { 
            /* Abstract definition */
        }
        ///////////////////////////////////////////////////////////////////////
        /// \brief Jump forward a certain number of places in the random
        /// sequence
        /// 
        /// \param places The number of places to jump by. Default: 1e6
        ///////////////////////////////////////////////////////////////////////
        void jump(int places = 1e6)
        {
            for (int i = 0; i < places; i++) { this->generateUniform(); }
        }
    };
}
}